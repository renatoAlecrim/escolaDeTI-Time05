(function(e){
    "use strict";
    function t(e,t){
        function n(n,r,i){
            n.libraryLoaded=false;
            n.cameraLive=false;
            n.activeCountdown=false;
            if(n.viewerHeight===undefined){
                n.viewerHeight="auto"
            }
            if(n.viewerWidth===undefined){
                n.viewerWidth="auto"
            }
            if(n.outputHeight===undefined){
                n.outputHeight=n.viewerHeight
            }
            if(n.outputWidth===undefined){
                n.outputWidth=n.viewerWidth
            }
            Webcam.set({
                width:n.viewerWidth,
                height:n.viewerHeight,
                dest_width:n.outputWidth,
                dest_height:n.outputHeight,
                image_format:n.imageFormat,
                jpeg_quality:n.jpegQuality,
                force_flash:false
            });
            if(n.flashFallbackUrl!=="undefined"){
                Webcam.setSWFLocation(n.flashFallbackUrl)
            }
            Webcam.attach("#ng-camera-feed");
            Webcam.on("load",function(){
                //console.info("library loaded");
                n.$apply(function(){
                    n.libraryLoaded=true
                })
            });
            Webcam.on("live",function(){
                //console.info("camera live");
                n.$apply(function(){
                    n.cameraLive=true
                })
            });
            Webcam.on("error",function(e){
                console.error("WebcameJS directive ERROR: ",e)
            });
            if(n.shutterUrl!==undefined){
                n.shutter=new Audio;
                n.shutter.autoplay=false;
                if(navigator.userAgent.match(/Firefox/)){
                    n.shutter.src=n.shutterUrl.split(".")[0]+".ogg"
                }
                else{
                    n.shutter.src=n.shutterUrl
                }
            }
            if(n.countdown!==undefined){
                n.countdownTime=parseInt(n.countdown)*1e3;
                n.countdownText=parseInt(n.countdown)
            }
            n.countdownStart=function(){
                n.activeCountdown=true;
                n.countdownPromise=e.defer();
                n.countdownTick=setInterval(function(){
                    return n.$apply(function(){
                        var e;e=parseInt(n.countdownText)-1;
                        if(e===0){
                            n.countdownText=n.captureMessage!=null?n.captureMessage:"GO!";
                            clearInterval(n.countdownTick);
                            n.countdownPromise.resolve()
                        }
                        else{
                            n.countdownText=e
                        }
                    })
                },1e3)
            };
            n.getSnapshot=function(){
                if(n.countdown!==undefined){
                    n.countdownStart();
                    n.countdownPromise.promise.then(function(){
                        t(function(){
                            n.activeCountdown=false;
                            n.countdownText=parseInt(n.countdown)
                        },2e3);
                        if(n.shutterUrl!==undefined){
                            n.shutter.play()
                        }
                        Webcam.snap(function(e){
                            n.snapshot=e
                        })
                    })
                }
                else{
                    if(n.shutterUrl!==undefined){
                        n.shutter.play()
                    }
                    Webcam.snap(function(e){
                        n.snapshot=e
                    })
                }
            }
        }
        return{
            restrict:"E",
            scope:{
                actionMessage:"@",
                captureMessage:"@",
                countdown:"@",
                flashFallbackUrl:"@",
                overlayUrl:"@",
                outputHeight:"@",
                outputWidth:"@",
                shutterUrl:"@",
                viewerHeight:"@",
                viewerWidth:"@",
                imageFormat:"@",
                jpegQuality:"@",
                snapshot:"="},
                template:'<div class="ng-camera"> <div class="ng-camera-countdown" ng-if="countdown" ng-show="activeCountdown"> <p class="tick">{{countdownText}}</p></div><div class="ng-camera-stack"> <img class="ng-camera-overlay" ng-if="overlayUrl" ng-show="cameraLive" ng-src="{{overlayUrl}}" alt="overlay"> <div id="ng-camera-feed"></div></div><button id="ng-camera-action" ng-click="getSnapshot()">{{actionMessage}}</button></div>',
                link:n
            }
        }
        e.module("cameraWeb",[]);
        e.module("cameraWeb").directive("ngCamera",t);
        t.$inject=["$q","$timeout"]
    })(angular)
